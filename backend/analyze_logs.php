#!/usr/bin/env php
<?php

/**
 * –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ª–æ–≥–æ–≤ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: php analyze_logs.php [--errors] [--warnings] [--stats]
 */

$logFile = __DIR__ . '/storage/logs/laravel.log';

if (!file_exists($logFile)) {
    echo "‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $logFile\n";
    exit(1);
}

$options = getopt('', ['errors', 'warnings', 'stats', 'help']);

if (isset($options['help'])) {
    echo "üìä –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ª–æ–≥–æ–≤ Laravel\n\n";
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n";
    echo "  php analyze_logs.php --errors     –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏\n";
    echo "  php analyze_logs.php --warnings   –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n";
    echo "  php analyze_logs.php --stats      –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n";
    echo "  php analyze_logs.php              –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ª–æ–≥–∏\n\n";
    exit(0);
}

$lines = file($logFile);
$errors = [];
$warnings = [];
$info = [];
$loginAttempts = [];
$apiRequests = [];

foreach ($lines as $line) {
    if (empty(trim($line))) continue;
    
    // –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–æ–∫—É –ª–æ–≥–∞
    if (preg_match('/^\[(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})\] local\.(\w+): (.+)$/', $line, $matches)) {
        $timestamp = $matches[1];
        $level = $matches[2];
        $message = $matches[3];
        
        $logEntry = [
            'timestamp' => $timestamp,
            'level' => $level,
            'message' => $message,
            'raw' => $line
        ];
        
        switch ($level) {
            case 'ERROR':
                $errors[] = $logEntry;
                break;
            case 'WARNING':
                $warnings[] = $logEntry;
                break;
            case 'INFO':
                $info[] = $logEntry;
                
                // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
                if (strpos($message, 'Admin login attempt') !== false) {
                    $loginAttempts[] = $logEntry;
                } elseif (strpos($message, 'API Request') !== false) {
                    $apiRequests[] = $logEntry;
                }
                break;
        }
    }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
if (isset($options['stats'])) {
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤\n";
    echo str_repeat("=", 50) . "\n";
    echo "üî¥ –û—à–∏–±–∫–∏: " . count($errors) . "\n";
    echo "üü° –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: " . count($warnings) . "\n";
    echo "üîµ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ: " . count($info) . "\n";
    echo "üîê –ü–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞: " . count($loginAttempts) . "\n";
    echo "üåê API –∑–∞–ø—Ä–æ—Å—ã: " . count($apiRequests) . "\n";
    echo "üìà –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: " . (count($errors) + count($warnings) + count($info)) . "\n\n";
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    $today = date('Y-m-d');
    $todayErrors = array_filter($errors, function($e) use ($today) {
        return strpos($e['timestamp'], $today) === 0;
    });
    $todayWarnings = array_filter($warnings, function($w) use ($today) {
        return strpos($w['timestamp'], $today) === 0;
    });
    
    echo "üìÖ –ó–∞ —Å–µ–≥–æ–¥–Ω—è ($today):\n";
    echo "   üî¥ –û—à–∏–±–∫–∏: " . count($todayErrors) . "\n";
    echo "   üü° –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: " . count($todayWarnings) . "\n\n";
}

if (isset($options['errors']) || (!isset($options['warnings']) && !isset($options['stats']))) {
    if (!empty($errors)) {
        echo "üî¥ –û–®–ò–ë–ö–ò (" . count($errors) . ")\n";
        echo str_repeat("=", 50) . "\n";
        foreach (array_slice($errors, -10) as $error) {
            echo "‚è∞ {$error['timestamp']}\n";
            echo "üìù " . substr($error['message'], 0, 100) . "...\n\n";
        }
    }
}

if (isset($options['warnings']) || (!isset($options['errors']) && !isset($options['stats']))) {
    if (!empty($warnings)) {
        echo "üü° –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø (" . count($warnings) . ")\n";
        echo str_repeat("=", 50) . "\n";
        foreach (array_slice($warnings, -10) as $warning) {
            echo "‚è∞ {$warning['timestamp']}\n";
            echo "üìù " . substr($warning['message'], 0, 100) . "...\n\n";
        }
    }
}

if (!isset($options['errors']) && !isset($options['warnings']) && !isset($options['stats'])) {
    echo "üîç –ü–û–°–õ–ï–î–ù–ò–ï –°–û–ë–´–¢–ò–Ø\n";
    echo str_repeat("=", 50) . "\n";
    
    $allLogs = array_merge($errors, $warnings, $info);
    usort($allLogs, function($a, $b) {
        return strcmp($a['timestamp'], $b['timestamp']);
    });
    
    foreach (array_slice($allLogs, -20) as $log) {
        $icon = $log['level'] === 'ERROR' ? 'üî¥' : ($log['level'] === 'WARNING' ? 'üü°' : 'üîµ');
        echo "$icon [{$log['level']}] {$log['timestamp']}\n";
        echo "   " . substr($log['message'], 0, 80) . "...\n\n";
    }
}

echo "üí° –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏: tail -f storage/logs/laravel.log\n";
echo "üîç –î–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: grep -i 'error\\|warning' storage/logs/laravel.log\n";
